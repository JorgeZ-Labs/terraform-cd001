name: Demo Terraform Workflow V1

on:
  workflow_dispatch:
    inputs:
      terraform_mode:
        description: 'Terraform mode'
        required: true
        default: 'validate'
        type: choice
        options:
          - validate
          - init
          - plan
          - apply
          - destroy
      require_approval:
        description: 'Require approval'
        required: true
        default: 'false'
        type: choice
        options:
          - true
          - false

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform-run:
    name: Terraform ${{ github.event.inputs.terraform_mode }} - demo
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_OIDC: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.7.x'

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Init
        id: init
        run: |
          terraform -chdir=azure/workflows/base init \
            -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -backend-config="resource_group_name=${{ secrets.AZURE_RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.AZURE_CONTAINER_NAME }}" \
            -backend-config="key=${{ secrets.TFSTATE_KEY }}" \
            -backend-config="use_azuread_auth=true"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Validate
        if: ${{ github.event.inputs.terraform_mode == 'validate' }}
        id: validate
        run: terraform -chdir=azure/workflows/base validate
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Plan
        if: ${{ github.event.inputs.terraform_mode == 'plan' }}
        id: plan
        run: terraform -chdir=azure/workflows/base plan -out=tfplan -var="azure_subscription_id_global=${{ secrets.AZURE_SUBSCRIPTION_ID }}"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Apply
        if: ${{ github.event.inputs.terraform_mode == 'apply' }}
        id: apply
        run: terraform -chdir=azure/workflows/base apply -auto-approve -var="azure_subscription_id_global=${{ secrets.AZURE_SUBSCRIPTION_ID }}"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Destroy
        if: ${{ github.event.inputs.terraform_mode == 'destroy' }}
        id: destroy
        run: terraform -chdir=azure/workflows/base destroy -auto-approve -var="azure_subscription_id_global=${{ secrets.AZURE_SUBSCRIPTION_ID }}"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Azure logout
        run: az logout
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true
